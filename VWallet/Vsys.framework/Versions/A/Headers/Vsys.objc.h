// Objective-C API for talking to vsys Go package.
//   gobind -lang=objc vsys
//
// File is generated by gobind. Do not edit.

#ifndef __Vsys_H__
#define __Vsys_H__

@import Foundation;
#include "Universe.objc.h"


@class VsysAccount;
@class VsysKeys;
@class VsysTransaction;
@class VsysWallet;

@interface VsysAccount : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
/**
 * 生成密钥对
 */
- (instancetype)init:(NSString*)network publicKey:(NSString*)publicKey;
- (NSString*)accountSeed;
/**
 * 地址、Base58编码
 */
- (NSString*)address;
/**
 * 私钥、Base58编码
 */
- (NSString*)privateKey;
/**
 * 公钥、Base58编码
 */
- (NSString*)publicKey;
/**
 * The output is base58 encoded data
 */
- (NSString*)signData:(NSData*)data;
/**
 * 验证签名
 */
- (BOOL)verifySignature:(NSData*)data signature:(NSData*)signature;
@end

@interface VsysKeys : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSData*)publicKey;
- (void)setPublicKey:(NSData*)v;
- (NSData*)privateKey;
- (void)setPrivateKey:(NSData*)v;
@end

@interface VsysTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)txId;
- (void)setTxId:(NSString*)v;
- (int64_t)timestamp;
- (void)setTimestamp:(int64_t)v;
- (int64_t)fee;
- (void)setFee:(int64_t)v;
- (int16_t)feeScale;
- (void)setFeeScale:(int16_t)v;
- (int64_t)amount;
- (void)setAmount:(int64_t)v;
- (NSData*)attachment;
- (void)setAttachment:(NSData*)v;
- (NSString*)recipient;
- (void)setRecipient:(NSString*)v;
/**
 * 生成数据
 */
- (NSData*)buildTxData;
- (long)txType;
@end

@interface VsysWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
/**
 * 创建钱包
 */
- (instancetype)init:(NSString*)seed network:(NSString*)network;
/**
 * n >= 0
 */
- (VsysAccount*)generateAccount:(long)nonce;
@end

FOUNDATION_EXPORT const int64_t VsysApi;
/**
 * Fee
 */
FOUNDATION_EXPORT const int16_t VsysDefaultFeeScale;
/**
 * Fee
 */
FOUNDATION_EXPORT const int64_t VsysDefaultTxFee;
/**
 * Network
 */
FOUNDATION_EXPORT NSString* const VsysNetworkMainnet;
/**
 * Network
 */
FOUNDATION_EXPORT NSString* const VsysNetworkTestnet;
FOUNDATION_EXPORT NSString* const VsysOpcTypeAccount;
FOUNDATION_EXPORT NSString* const VsysOpcTypeSeed;
FOUNDATION_EXPORT NSString* const VsysOpcTypeSignature;
FOUNDATION_EXPORT NSString* const VsysOpcTypeTransction;
FOUNDATION_EXPORT NSString* const VsysProtocol;
/**
 * TX_TYPE
 */
FOUNDATION_EXPORT const int64_t VsysTxTypeCancelLease;
/**
 * TX_TYPE
 */
FOUNDATION_EXPORT const int64_t VsysTxTypeLease;
/**
 * TX_TYPE
 */
FOUNDATION_EXPORT const int64_t VsysTxTypeMining;
/**
 * TX_TYPE
 */
FOUNDATION_EXPORT const int64_t VsysTxTypePayment;
/**
 * Fee
 */
FOUNDATION_EXPORT const int64_t VsysVSYS;

@interface Vsys : NSObject
// skipped variable D with unsupported type: []int64

// skipped variable D2 with unsupported type: []int64

// skipped variable I with unsupported type: []int64

// skipped variable K with unsupported type: []int64

// skipped variable L with unsupported type: []int64

// skipped variable X with unsupported type: []int64

// skipped variable Y with unsupported type: []int64

@end

// skipped function A with unsupported parameter or return types


/**
 * AesDecrypt aes cbc PKCS5Padding 解密
 */
FOUNDATION_EXPORT NSData* VsysAesDecrypt(NSData* key, NSData* data, NSError** error);

/**
 * AesEncrypt aes加密
key为任意长度
data为任意长度
使用随机化iv,多次加密结果不同
PKCS5Padding
CBC模式
 */
FOUNDATION_EXPORT NSData* VsysAesEncrypt(NSData* key, NSData* data, NSError** error);

FOUNDATION_EXPORT NSData* VsysBase58Decode(NSData* data);

FOUNDATION_EXPORT NSData* VsysBase58Encode(NSData* data);

/**
 * 生成密钥对
 */
FOUNDATION_EXPORT VsysAccount* VsysGenerateKeyPair(NSData* seed);

// skipped function GenerateKeyPair1 with unsupported parameter or return types


/**
 * 生成助记词
 */
FOUNDATION_EXPORT NSString* VsysGenerateSeed(void);

FOUNDATION_EXPORT NSString* VsysGetNetworkFromAddress(NSString* address);

FOUNDATION_EXPORT NSData* VsysHashChain(NSData* nonceSecret);

// skipped function M with unsupported parameter or return types


/**
 * 生成密钥对
 */
FOUNDATION_EXPORT VsysAccount* VsysNewAccount(NSString* network, NSString* publicKey);

FOUNDATION_EXPORT VsysTransaction* VsysNewCancelLeaseTransaction(NSString* txId);

FOUNDATION_EXPORT VsysTransaction* VsysNewLeaseTransaction(NSString* recipient, int64_t amount);

FOUNDATION_EXPORT VsysTransaction* VsysNewMiningTransaction(void);

FOUNDATION_EXPORT VsysTransaction* VsysNewPaymentTransaction(NSString* recipient, int64_t amount);

/**
 * 创建钱包
 */
FOUNDATION_EXPORT VsysWallet* VsysNewWallet(NSString* seed, NSString* network);

// skipped function S with unsupported parameter or return types


FOUNDATION_EXPORT NSData* VsysSharedKey(NSData* secretKey, NSData* publicKey);

FOUNDATION_EXPORT NSData* VsysSign(NSData* secretKey, NSData* msg, NSData* opt_random);

FOUNDATION_EXPORT NSData* VsysSignMessage(NSData* secretKey, NSData* msg, NSData* opt_random);

FOUNDATION_EXPORT BOOL VsysValidateAddress(NSString* address);

FOUNDATION_EXPORT BOOL VsysValidatePhrase(NSString* phrase);

FOUNDATION_EXPORT long VsysVerify(NSData* publicKey, NSData* msg, NSData* signature);

// skipped function Z with unsupported parameter or return types


#endif
